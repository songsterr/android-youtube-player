apply plugin: 'maven-publish'
apply plugin: 'org.jetbrains.dokka'

def tagName = "1.1.7"
def branch = System.getenv('GIT_BRANCH')

if (branch == null || branch.length() == 0) {
    branch = "git rev-parse --abbrev-ref HEAD".execute().text.trim()
}

branch = branch.replace('origin/', '')

if (branch != "master") {
    tagName += "-SNAPSHOT"
}

// Friendly print the version output to the Gradle console
printf("\n--------VERSION DATA--------\n" +
        "- NAME: " + tagName + "\n----------------------------\n")


task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    if (project.plugins.findPlugin("com.android.library")) {
        from android.sourceSets.main.java.srcDirs
        from android.sourceSets.main.kotlin.srcDirs
    } else {
        from sourceSets.main.java.srcDirs
        from sourceSets.main.kotlin.srcDirs
    }
}

tasks.withType(dokkaHtmlPartial.getClass()).configureEach {
    pluginsMapConfiguration.set(
            ["org.jetbrains.dokka.base.DokkaBase": """{ "separateInheritedMembers": true}"""]
    )
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set('javadoc')
    from dokkaJavadoc.outputDirectory
}

artifacts {
    archives androidSourcesJar
    archives javadocJar
}

group = "com.songsterr"

afterEvaluate {
    publishing {
        repositories {
            maven {
                name 'maven.songsterr.com'
                def repo = 's3://maven.songsterr.com.s3.amazonaws.com/'
                if (tagName.endsWith('-SNAPSHOT')) {
                    repo += "snapshots/"
                }
                url = repo
                authentication {
                    awsIm(AwsImAuthentication) // load from EC2 role or env var
                }
            }
        }
        publications {
            gpr(MavenPublication) {
                groupId group
                artifactId PUBLISH_ARTIFACT_ID
                version tagName
                artifact(androidSourcesJar)

                from components.release
            }
        }
    }
}